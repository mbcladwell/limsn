./lib/#gplot.scm#:66:  (let* ((port (open-input-pipe (string-append "gnuplot " gnuplot-script-file)))
./lib/#gplot.scm#:71:			(set! a (string-append a line))
./lib/#gplot.scm#:75:	 (coord-start (string-match "<svg  width=" a ))
./lib/#gplot.scm#:76:	 (coord-end (string-match "</g></svg>" a)))
./lib/#gplot.scm#:105:	 (hit-num-text (string-append "hits: " num-hits))
./lib/#gplot.scm#:139:	 (hit-num-text (string-append "hits: " num-hits))
./lib/#gplot.scm#:171:   (string-append str1 str2 threshold str3 xmax str4 threshold str5 ylabel str6  hit-num-text str7 hit-num-text-x str8 hit-num-text-y str9 metric-text str10 metric-text-x str11 metric-text-y str12 data str13 ) ))
./lib/#gplot.scm#:194:;;    (string-append str1  out-file str2 threshold str3 xmax str4 threshold str5 ylabel str6  hit-num-text str7 hit-num-text-x str8 hit-num-text-y str9 metric-text str10 metric-text-x str11 metric-text-y str12 data str13 ) ))
./lib/#gplot.scm#:215:		 (rev-row (cond ((equal? format "96")  (assq-ref ns-lst (string->number row-num)))
./lib/#gplot.scm#:216:				((equal? format "384") (assq-ref tef-lst (string->number row-num)))
./lib/#gplot.scm#:217:				((equal? format "1536") (assq-ref fts-lst (string->number row-num)))
./lib/#gplot.scm#:220:		 (y-tic-label (cond ((equal? format "96")  (assq-ref get-96-row-labels (string->number row-num)))
./lib/#gplot.scm#:221:				    ((equal? format "384") (assq-ref get-384-row-labels (string->number row-num)))
./lib/#gplot.scm#:222:				    ((equal? format "1536") (assq-ref get-1536-row-labels (string->number row-num)))
./lib/#gplot.scm#:239:            (cons (string-append  row-num "\t" (number->string rev-row) "\t" col "\t" y-tic-label  "\t" type "\t" replicates "\t" target "\n")
./lib/#gplot.scm#:264:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\nset output 'pub/" spl-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\"\nset output 'pub/" trg-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/#gplot.scm#:295:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\""))
./lib/#gplot.scm#:324:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\""))
./lib/#gplot.scm#:352:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/#gplot.scm#:382:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 1:2:4:ytic(3) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\n"))
./lib/#gplot.scm#:412:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\nset output 'pub/" spl-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\"\nset output 'pub/" trg-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/#gplot.scm#:443:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 1:2:4:ytic(3) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\n"))
./lib/lnpg.scm:8:  #:use-module (ice-9 string-fun)  ;;string-replace-substring
./lib/lnpg.scm:22:  (string-append "postgresql://admin@" ip ":" port "/postgres"  ))
./lib/lnpg.scm:26:  (string-append "postgresql://admin@" ip ":" port "/lndb" ))
./lib/lnpg.scm:30:(string-append "postgresql://ln_admin:welcome@" ip ":" port "/" dbname ))
./lib/lnpg.scm:36:   (pretty-print (string-append "psql " pg-pgdb " -f " lnpg-store-dir "/scripts/initdba.sql")) 
./lib/lnpg.scm:37:  (system (string-append "psql " pg-pgdb " -f " lnpg-store-dir "/scripts/initdba.sql"))))
./lib/lnpg.scm:41:  (system (string-append "psql " pg-lndb " -f " lnpg-store-dir "/scripts/initdbb.sql")))
./lib/lnpg.scm:44:(define (clean-db ln-cs)  (system (string-append "psql " ln-cs " -f " lnpg-store-dir "/scripts/drop-func-tables.sql") ))
./lib/lnpg.scm:45:(define (create-db ln-cs)  (system (string-append "psql " ln-cs " -f " lnpg-store-dir "/scripts/create-db.sql") ))
./lib/lnpg.scm:46:(define (load-eg-data ln-cs)  (system (string-append "psql " ln-cs " -f " lnpg-store-dir "/scripts/example-data.sql") ))
./lib/gplot.scm:66:  (let* ((port (open-input-pipe (string-append "gnuplot " gnuplot-script-file)))
./lib/gplot.scm:71:			(set! a (string-append a line))
./lib/gplot.scm:75:	 (coord-start (string-match "<svg  width=" a ))
./lib/gplot.scm:76:	 (coord-end (string-match "</g></svg>" a)))
./lib/gplot.scm:105:	 (hit-num-text (string-append "hits: " num-hits))
./lib/gplot.scm:139:	 (hit-num-text (string-append "hits: " num-hits))
./lib/gplot.scm:171:   (string-append str1 str2 threshold str3 xmax str4 threshold str5 ylabel str6  hit-num-text str7 hit-num-text-x str8 hit-num-text-y str9 metric-text str10 metric-text-x str11 metric-text-y str12 data str13 ) ))
./lib/gplot.scm:194:;;    (string-append str1  out-file str2 threshold str3 xmax str4 threshold str5 ylabel str6  hit-num-text str7 hit-num-text-x str8 hit-num-text-y str9 metric-text str10 metric-text-x str11 metric-text-y str12 data str13 ) ))
./lib/gplot.scm:215:		 (rev-row (cond ((equal? format "96")  (assq-ref ns-lst (string->number row-num)))
./lib/gplot.scm:216:				((equal? format "384") (assq-ref tef-lst (string->number row-num)))
./lib/gplot.scm:217:				((equal? format "1536") (assq-ref fts-lst (string->number row-num)))
./lib/gplot.scm:220:		 (y-tic-label (cond ((equal? format "96")  (assq-ref get-96-row-labels (string->number row-num)))
./lib/gplot.scm:221:				    ((equal? format "384") (assq-ref get-384-row-labels (string->number row-num)))
./lib/gplot.scm:222:				    ((equal? format "1536") (assq-ref get-1536-row-labels (string->number row-num)))
./lib/gplot.scm:239:            (cons (string-append  row-num "\t" (number->string rev-row) "\t" col "\t" y-tic-label  "\t" type "\t" replicates "\t" target "\n")
./lib/gplot.scm:264:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\nset output 'pub/" spl-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\"\nset output 'pub/" trg-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/gplot.scm:295:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\""))
./lib/gplot.scm:324:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\""))
./lib/gplot.scm:352:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/gplot.scm:382:	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal svg size 600,350\nsave '-'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 1:2:4:ytic(3) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\n"))
./lib/gplot.scm:412:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:5:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\nset output 'pub/" spl-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:6:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"plate1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"plate2\", NaN with points pt 20 lc rgb 0x0000FF title \"plate3\", NaN with points pt 20  lc rgb 0x33FFFF title \"plate4\"\nset output 'pub/" trg-rep-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 3:2:7:ytic(4) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb 0x000000 title \"target1\", NaN with points pt 20 lc rgb 0xFFFFFF title \"target2\", NaN with points pt 20 lc rgb 0x0000FF title \"target3\", NaN with points pt 20  lc rgb 0x33FFFF title \"target4\""))
./lib/gplot.scm:443:;; 	 (gplot-script   (string-append "reset session\n$Data <<EOD\n" data-body "EOD\nset terminal pngcairo size 600,350\nset output 'pub/" spl-out "'\nset key box outs vert right center\nset xrange [0:" xmax  "]\nset yrange [0:" ymax "]\nset x2tics\nset x2label \"Columns\"\nset ylabel \"Rows\"\nunset xtics\nset xtics format \" \"\nplot $Data using 1:2:4:ytic(3) notitle with points ps " ptsize " lc rgbcolor variable pt 20, NaN with points pt 20 lc rgb \"green\" title \"pos\", NaN with points pt 20 lc rgb \"red\" title \"neg\", NaN with points pt 20 lc rgb \"black\" title \"unk\", NaN with points pt 20  lc rgb \"grey\" title \"blank\", NaN with points pt 20  lc rgb 0x33FFFF title \"edge\"\n"))
./lib/artass.scm:80:;; 		     (set! holder (cons (string-split ret #\=) holder))
./lib/artass.scm:90:  (string-append pre "-" (number->string (random 10000000000000000000000)) "." suff))
./lib/artass.scm:124:(define (stripfix x) (uri-decode (string-trim-both x white-chars) ))
./lib/artass.scm:132:             (string-append  "\"" x "\", ") )
./lib/artass.scm:137:  (let* ((step1 (string-concatenate (map process-pg-row-element x) ))
./lib/artass.scm:138:	 (step2  (xsubstring step1 0 (- (string-length step1) 2))) ;;trim the final comma
./lib/artass.scm:140:   (string-append "{" step2 "},")))
./lib/artass.scm:148:	 (set! out (cons (string-append "<option value=\"" (number->string (cdaar in)) "\">"(cdadar in) "</option>") out))
./lib/artass.scm:151:	 (set! out (cons (string-append "<option value=\"" (number->string (cdaar in)) "\">"  (cdadar in) "</option>") out))
./lib/artass.scm:165:            (cons (string-append "<tr><td><a href=\"/assayrun/getarid?arid=" (number->string (cdr (car x))) "\">" assay-run-sys-name "</a></td><td>" assay-run-name "</td><td>" descr "</td><td>" assay-type-name "</td><td><a href=\"/layout/lytbyid?id=" lytid  "\">" sys-name "</a></td><td>" name "</td></tr>")
./lib/artass.scm:175:	 (set! out (cons (string-append "<option value=\"" (cdadar in) "\">"(cdadar in) "</option>") out))
./lib/artass.scm:178:	 (set! out (cons (string-append "<option value=\"" (cdadar in) "\">"  (cdadar in) "</option>") out))
./lib/artass.scm:184:(define (string->blist x)
./lib/artass.scm:186:  (bytevector->u8-list (string->utf8 x)))
./lib/artass.scm:192:      (let* ((result (string-append result (number->string (car lst)))))       
./lib/artass.scm:194:      (let* ((result (string-append result (number->string (car lst)) "+")))
./lib/artass.scm:199:  (let*((a (string->blist x))
./lib/artass.scm:204:(utf8->string (u8-list->bytevector (map string->number (string-split (stripfix x) #\space)))))
./lib/artass.scm:207:  (string-append "\"" x "\""))
./lib/artass.scm:216:       (substring (string->sha-256 (string-append passwd salt)) 0 16)
./lib/artass.scm:217:        (substring (string->sha-256 (string-append salt)) 0 16)))
./lib/artass.scm:221:  (string->md5 (string-append cust-id email "lnsDFoKytr")))
./lib/artass.scm:227:  (let* ((sql (string-append "SELECT person.id, person.lnuser, person.usergroup, person.email FROM person, sess_person WHERE sess_person.person_id=person.id AND sess_person.sid='" sid "'"))
./lib/artass.scm:243:   (string->uri (string-append "http://" (get-conf '(host name)) ":3000/" (string-trim dest #\/))))
./lib/artass.scm:246:   (string-append "http://" (get-conf '(host name)) ":3000/" (string-trim dest #\/)))
./lib/artass.scm:249: (let* ((sql (string-append "SELECT prjid FROM sess_person WHERE sess_person.sid='" sid "'"))
./lib/artass.scm:255:(let* ((sql (string-append "UPDATE sess_person SET prjid=" prjid " WHERE sess_person.sid='" sid "'"))
./app/controllers/urbit.scm~:36:	;;   (dummy  (DEBUG  (string-append "Value of name (in urbit): " name "~%")))				
./app/controllers/urbit.scm~:50:	     	 (dummy  (DEBUG  (string-append "Value of userid: ~a~%" userid)))				
./app/controllers/urbit.scm~:52:		 (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/urbit.scm~:91:;; 					   (dummy  (DEBUG  (string-append "Value of name: " name "~%")))				
./app/controllers/urbit.scm~:94:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/urbit.scm~:131:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/loginold.scm:68:					  ;; (dummy  (DEBUG  (string-append "Value of name: " name "~%")))				
./app/controllers/loginold.scm:71:					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/loginold.scm:108:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/utilities.scm~:8:(define (process-item x) (string-append "<tr><th>"(car x) "</th><th>" (cadr x) "</th></tr>"))
./app/controllers/utilities.scm~:28:			  (let*((sql (string-append "UPDATE config SET cust_id='" cust-id "', cust_key= '" cust-key "', cust_email='" email "' WHERE id=1"))
./app/controllers/utilities.scm~:36:				 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/utilities.scm~:70:				 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/utilities.scm~:92:			   (sql  (string-append "select id, password from lnuser where lnuser_name ='" user "'" ))
./app/controllers/utilities.scm~:97:				      (dummy (DB-get-all-rows (:conn rc (string-append "INSERT INTO lnsession(lnuser_id) VALUES('" userid "')"))))
./app/controllers/utilities.scm~:109:		    (redirect-to rc  (get-redirect-uri (string-append "../software/" topic "/index.html") )))))
./app/controllers/project.scm:26:            (cons (string-append "<tr><td> <input type=\"radio\" id=\"" project_sys_name  "\" name=\"prjid\" value=\"" (number->string (cdr (car x)))   "\"></td>
./app/controllers/project.scm:50:;; 	      (body (string-concatenate (prep-project-rows holder)))
./app/controllers/project.scm:69:				  (body (string-concatenate (prep-project-rows holder)))
./app/controllers/project.scm:93:	     ;; (register-url (string-append "http://" help-url-prefix "register"))
./app/controllers/project.scm:121:    			 (sql (string-append "select new_project('"  descr "', '" prj-name "', '" sid "')"))
./app/controllers/project.scm:133:			 (sql (string-append "select project_name, descr from project where id=" prjid ))
./app/controllers/project.scm:154:			 (sql (string-append "UPDATE project SET project_name='" prj-name "', descr='" descr "' WHERE id=" prjid))
./app/controllers/login.scm:49:	  (redirect-to rc  (get-redirect-uri (string-append "/urbit?name=" name)))
./app/controllers/login.scm:76:					  ;; (dummy  (DEBUG  (string-append "Value of name: " name "~%")))				
./app/controllers/login.scm:79:					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/login.scm:116:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/sessions.scm:35:		(expire-text (if expired? expires (string-append "<font style=\"color:red\">" expires "</font>" ))))      
./app/controllers/sessions.scm:36:	      (cons (string-append "<tr><td>" id  "</td><td>" lnuser-name "</td><td>" usergroup "</td><td>" expire-text  "</td></tr>")
./app/controllers/sessions.scm:57:			  (body (string-concatenate (prep-session-rows holder)))				
./app/controllers/plateset.scm:46:		(idval (string-append (number->string (cdr (car x))) "+" numplates "+" format "+" layoutid "+" reps "+" worklist-for-data))
./app/controllers/plateset.scm:48:            (cons (string-append "<tr><td> <input type=\"checkbox\" id=\"" plate_set_sys_name  "\" name=\"plateset-id\" value=\"" idval "\" onclick=\"handleChkbxClick()\"></td><td><a href=\"/plate/getpltforps?id=" (number->string (cdr (car x))) "\">" plate_set_sys_name "</a></td><td>" plate_set_name "</td><td>" descr "</td><td>" type "</td><td>" numplates "</td><td>" format "</td><td><a href=\"/layout/lytbyid?id="  layoutid "\">" layout "</a></td><td>" reps "</td><td>" worklist "</td></tr>")
./app/controllers/plateset.scm:56:  (let* ((sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_run.descr, assay_type.assay_type_name, plate_layout_name.sys_name, plate_layout_name.name FROM assay_run, assay_type, plate_set, plate_layout_name WHERE assay_run.plate_layout_name_id=plate_layout_name.id AND assay_run.assay_type_id=assay_type.id AND assay_run.plate_set_id=plate_set.id AND plate_set.project_id =" id ))
./app/controllers/plateset.scm:58:	 (string-concatenate (prep-ar-rows holder))))
./app/controllers/plateset.scm:72:	      (cons (string-append "<tr><td><a href=\"/assayrun/getarid?arid=" id  "\">" assay-run-sys-name "</a></td><td>" assay-run-name "</td><td>" assay-type-name "</td><td><a href=\"/hitlist/gethlbyid?id=" hit-list-id  "\">" hit-list-sys-name "</a></td><td>" hit-list-name "</td><td>" descr "</td><td>" nhits "</td></tr>")
./app/controllers/plateset.scm:80:  (let* ((sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_type.assay_type_name, hit_list.hitlist_sys_name, hit_list.hitlist_name, hit_list.descr, hit_list.n  FROM assay_run, plate_set, hit_list, assay_type WHERE assay_type.id=assay_run.assay_type_id AND hit_list.assay_run_id=assay_run.id  AND assay_run.plate_set_id=plate_set.id AND plate_set.project_id =" id ))
./app/controllers/plateset.scm:82:	(string-concatenate (prep-hl-for-prj-rows holder))))
./app/controllers/plateset.scm:105:		;;	  (sql (string-append "select plate_set.id, plate_set_sys_name, plate_set_name, plate_set.descr, plate_type_name, num_plates, plate_set.plate_format_id, plate_layout_name_id, plate_layout_name.replicates from plate_set, plate_type, plate_layout_name where plate_set.plate_type_id=plate_type.id AND plate_set.plate_layout_name_id=plate_layout_name.id AND plate_set.project_id =" prjid ))
./app/controllers/plateset.scm:107:(sql (string-append "SELECT plate_set.id, plate_set.plate_set_sys_name, plate_set_name, plate_set.descr,  plate_type.plate_type_name, num_plates, format,  plate_layout_name.sys_name,  plate_layout_name.id, plate_layout_name.replicates, rearray_pairs.ID FROM  plate_format, plate_type, plate_layout_name, plate_set FULL outer JOIN rearray_pairs ON plate_set.id= rearray_pairs.dest WHERE plate_format.id = plate_set.plate_format_id AND plate_set.plate_layout_name_id = plate_layout_name.id  AND plate_set.plate_type_id = plate_type.id  AND project_id =" prjid " ORDER BY plate_set.id"))
./app/controllers/plateset.scm:110:			  (body  (string-concatenate  (prep-ps-for-prj-rows holder)) )
./app/controllers/plateset.scm:135:			   (start (map string-split b (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:137:			   (sql (string-append "select plate_set_name, descr from plate_set where id=" psid ))
./app/controllers/plateset.scm:156:			 (sql (string-append "UPDATE plate_set SET plate_set_name='" ps-name "', descr='" descr "' WHERE id=" psid))
./app/controllers/plateset.scm:160:		    (redirect-to rc (get-redirect-uri (string-append "plateset/getps?id="  prjid)))
./app/controllers/plateset.scm:178:			 (start (map string-split b (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:179:			 (c (map string-append (circular-list "PS-")  (map car start) ))
./app/controllers/plateset.scm:180:			 (d (map string-append c (circular-list " (")  ))
./app/controllers/plateset.scm:181:			 (ps-num-text  (string-join (map string-append d (map cadr start) (circular-list ");"))))
./app/controllers/plateset.scm:182:			 (tot-plates (apply + (map string->number (map cadr start))))
./app/controllers/plateset.scm:188:			 (sql2 (string-append "SELECT name, descr from plate_layout_name where id =" lyt-id))
./app/controllers/plateset.scm:190:			 (lyt-txt (string-append  (cdar  holder2)  "; "  (cdadr  holder2)) )			     			   
./app/controllers/plateset.scm:191:			 (sql3 (string-append "SELECT id, plate_type_name from plate_type"))
./app/controllers/plateset.scm:219:		(sql (string-append "select new_plate_set('" psdescr "', '" psname  "', " numplates ", " format ", " plttypeid ", " prjid ", " spllytid ", '" sid "', true, " trglytid  ")"))
./app/controllers/plateset.scm:221:		(dest (string-append "/plateset/getps?id=" prjid))
./app/controllers/plateset.scm:238:;; 		(gt10? (> (string->number numplates-pre) 10))
./app/controllers/plateset.scm:263:;; 		(sql (string-append "select id, name from plate_layout_name WHERE source_dest = 'source' AND plate_format_id =" format))
./app/controllers/plateset.scm:266:;; 		(sample-layouts (string-concatenate (dropdown-contents-with-id holder sample-layout-pre)))
./app/controllers/plateset.scm:269:;; 		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:270:;; 		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = " (number->string reps) ") OR (project_id IS NULL AND reps = " (number->string reps) ")")))
./app/controllers/plateset.scm:272:;; 			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = 1) OR (project_id IS NULL AND reps =1)")
./app/controllers/plateset.scm:273:;; 			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:278:;; 		(target-layouts  (string-concatenate (dropdown-contents-with-id holder2 target-layout-pre)))
./app/controllers/plateset.scm:310:;; 		(toobig? (> (string->number numplates-pre) (string->number maxplates)))
./app/controllers/plateset.scm:324:;; 		(sql (string-append "select id, name from plate_layout_name WHERE source_dest = 'source' AND plate_format_id =" format))
./app/controllers/plateset.scm:327:;; 		(sample-layouts (string-concatenate (dropdown-contents-with-id holder sample-layout-pre)))
./app/controllers/plateset.scm:330:;; 		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:331:;; 		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = " (number->string reps) ") OR (project_id IS NULL AND reps = " (number->string reps) ")")))
./app/controllers/plateset.scm:333:;; 			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = 1) OR (project_id IS NULL AND reps =1)")
./app/controllers/plateset.scm:334:;; 			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:339:;; 		(target-layouts  (string-concatenate (dropdown-contents-with-id holder2 target-layout-pre)))
./app/controllers/plateset.scm:372:		(toobig? (> (string->number numplates-pre) (string->number allowedplates)))	
./app/controllers/plateset.scm:386:		(sql (string-append "select id, name from plate_layout_name WHERE source_dest = 'source' AND plate_format_id =" format))
./app/controllers/plateset.scm:389:		(sample-layouts (string-concatenate (dropdown-contents-with-id holder sample-layout-pre)))
./app/controllers/plateset.scm:392:		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:393:		;; 	  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = " (number->string reps) ") OR (project_id IS NULL AND reps = " (number->string reps) ")")))
./app/controllers/plateset.scm:395:			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid " AND reps = 1) OR (project_id IS NULL AND reps =1)")
./app/controllers/plateset.scm:396:			  (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id= " prjid "  OR project_id IS NULL )")   
./app/controllers/plateset.scm:401:		(target-layouts  (string-concatenate (dropdown-contents-with-id holder2 target-layout-pre)))
./app/controllers/plateset.scm:433:	       (sql3 (string-append "SELECT id, plate_type_name from plate_type"))
./app/controllers/plateset.scm:436:	       (plate-types (string-concatenate (dropdown-contents-with-id holder3 plate-types-pre)))
./app/controllers/plateset.scm:481:			   (sql (string-append "SELECT new_plate_set_from_group('" descr "', '" psname "', " tot-plates ", " format ", " type ", " prjid ", " lyt-id ", '" sid "')"))
./app/controllers/plateset.scm:484:			  ;; (sql2 (string-append "select plate_set.id, plate_set_sys_name, plate_set_name, plate_set.descr, plate_type_name, num_plates, plate_set.plate_format_id, plate_layout_name_id, plate_layout_name.replicates from plate_set, plate_type, plate_layout_name where plate_set.plate_type_id=plate_type.id AND plate_set.plate_layout_name_id=plate_layout_name.id AND plate_set.project_id =" prjid ))
./app/controllers/plateset.scm:487:			   (sql2 (string-append "SELECT plate_set.id, plate_set.plate_set_sys_name, plate_set_name, plate_set.descr,  plate_type.plate_type_name, num_plates, format,  plate_layout_name.name,  plate_layout_name.id, plate_layout_name.replicates, rearray_pairs.ID FROM  plate_format, plate_type, plate_layout_name, plate_set FULL outer JOIN rearray_pairs ON plate_set.id= rearray_pairs.dest WHERE plate_format.id = plate_set.plate_format_id AND plate_set.plate_layout_name_id = plate_layout_name.id  AND plate_set.plate_type_id = plate_type.id  AND project_id =" prjid " ORDER BY plate_set.id"))
./app/controllers/plateset.scm:490:			  (body  (string-concatenate  (prep-ps-for-prj-rows holder)) )
./app/controllers/plateset.scm:507:	;; (b (map list (cdr (string-split a #\newline))))
./app/controllers/plateset.scm:508:	 (temp-f (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "rnd" "txt")))
./app/controllers/plateset.scm:520:	 (set! results  (string-append results "(" (number->string arid) ", " (caar lst) ", " (cadar lst) ", "  (caddar lst)   ")" ))
./app/controllers/plateset.scm:523:	 (set! results (string-append results "("  (number->string arid) ", " (caar lst) ", " (cadar lst) ", "  (caddar lst)   ")," ))
./app/controllers/plateset.scm:536:	     (header (string-split ret #\tab))
./app/controllers/plateset.scm:540:				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/plateset.scm:541:					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/plateset.scm:544:			    (sql (string-append "INSERT INTO assay_result_pre (assay_run_id, plate_order, well, response) VALUES " holder2)))	 
./app/controllers/plateset.scm:557:	 (set! results  (string-append results "\"" (number->string (cdar lst)) "\"" ))
./app/controllers/plateset.scm:558:       (string-append "'{" results  "}'"))
./app/controllers/plateset.scm:560:	 (set! results  (string-append results "\"" (number->string (cdar lst)) "\","  ))
./app/controllers/plateset.scm:565:(let* ((sql (string-append "SELECT  well_sample.sample_id FROM assay_result, assay_run, plate_layout_name, plate_layout, plate_set, plate, plate_plate_set, well_numbers, well, well_sample WHERE assay_run.plate_set_id = plate_set.id AND assay_run.plate_layout_name_id = plate_layout_name.id AND assay_run.id=assay_result.assay_run_id AND assay_result.plate_order = plate_plate_set.plate_order AND assay_result.well = well.by_col AND plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.plate_format_id = well_numbers.plate_format AND plate_layout.well_by_col=well.by_col AND plate_set.id = plate_plate_set.plate_set_id AND plate_plate_set.plate_id = plate.id AND plate.id = well.plate_id AND well.by_col = well_numbers.by_col AND well_sample.well_id =  well.id AND well.by_col=well_numbers.by_col AND plate_layout_name.id= plate_layout.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result.assay_run_id = " (number->string arid) " AND assay_result.norm > " (number->string threshold)  " ORDER BY assay_result.norm"))
./app/controllers/plateset.scm:575:  (let* ((sql (string-append "SELECT  well_sample.sample_id FROM assay_result, assay_run, plate_layout_name, plate_layout, plate_set, plate, plate_plate_set, well_numbers, well, well_sample WHERE assay_run.plate_set_id = plate_set.id AND assay_run.plate_layout_name_id = plate_layout_name.id AND assay_run.id=assay_result.assay_run_id AND assay_result.plate_order = plate_plate_set.plate_order AND assay_result.well = well.by_col AND plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.plate_format_id = well_numbers.plate_format AND plate_layout.well_by_col=well.by_col AND plate_set.id = plate_plate_set.plate_set_id AND plate_plate_set.plate_id = plate.id AND plate.id = well.plate_id AND well.by_col = well_numbers.by_col AND well_sample.well_id =  well.id AND well.by_col=well_numbers.by_col AND plate_layout_name.id= plate_layout.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result.assay_run_id = " (number->string arid) " ORDER BY assay_result.norm limit "  numhits))
./app/controllers/plateset.scm:608:			  ;;(b (map list (cdr (string-split a #\newline))))
./app/controllers/plateset.scm:619:			  (sql (string-append "SELECT id from assay_type where assay_type_name ='" assay-type "'"))
./app/controllers/plateset.scm:626:			  (sql2 (string-append "SELECT new_assay_run('" assay-name "', '" assay-descr  "', " assay-type-id ", " psid ", " plt-lyt-name-id ", '" sid "')"))
./app/controllers/plateset.scm:627:		  	  ;;(lyt-txt (string-append lyt-sys-name ";" lyt-name ))
./app/controllers/plateset.scm:632:			  (sql4 (string-append "SELECT process_assay_run_data( " (number->string assay-run-id)  ")"))
./app/controllers/plateset.scm:639:					      (sql (string-append "SELECT new_hit_list ('" hl-name "', '" hl-descr "', "  numhits ", " (number->string assay-run-id) ", '" sid "', " pgarray ")" ))
./app/controllers/plateset.scm:644:				       (let* ((sql (string-append "SELECT mean_neg_2_sd FROM assay_run_stats WHERE response_type = 1 AND assay_run_id=" (number->string assay-run-id )))
./app/controllers/plateset.scm:647:					      (sql2 (string-append "SELECT new_hit_list ('" hl-name "', '" hl-descr "', "  (number->string (car results)) ", " (number->string assay-run-id) ", '" sid "', "  (cadr results) ")" ))
./app/controllers/plateset.scm:653:				       (let* ((sql (string-append "SELECT mean_neg_3_sd FROM assay_run_stats WHERE response_type = 1 AND assay_run_id=" (number->string assay-run-id )))
./app/controllers/plateset.scm:656:					      (sql2 (string-append "SELECT new_hit_list ('" hl-name "', '" hl-descr "', "  (number->string (car results)) ", " (number->string assay-run-id) ", '" sid "', "  (cadr results) ")" ))
./app/controllers/plateset.scm:662:				       (let* ((sql (string-append "SELECT mean_pos FROM assay_run_stats WHERE response_type = 1 AND assay_run_id=" (number->string assay-run-id )))     
./app/controllers/plateset.scm:665:					      (sql2 (string-append "SELECT new_hit_list ('" hl-name "', '" hl-descr "', "  (number->string (car results)) ", " (number->string assay-run-id) ", '" sid "', "  (cadr results) ")" ))
./app/controllers/plateset.scm:671:		     (redirect-to rc (get-redirect-uri (string-append "plate/getpltforps?id=" psid)))
./app/controllers/plateset.scm:701:			  ;;(b (map list (cdr (string-split a #\newline))))
./app/controllers/plateset.scm:712:		  	 (lyt-txt (string-append lyt-sys-name ";" lyt-name ))
./app/controllers/plateset.scm:734:			   (start (map string-split all-ps-ids (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:736:			   (sql (string-append "select plate_set.plate_set_name, plate_set.descr AS plate_set_descr, plate_set.num_plates, plate_set.plate_format_id, plate_set.plate_layout_name_id,  plate_layout_name.name AS lyt_name, plate_layout_name.descr,  plate_layout_name.control_loc,  plate_layout_name.sys_name from plate_set, plate_layout_name where plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.id=" psid ))
./app/controllers/plateset.scm:767:	       (start (map string-split all-ps-ids (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:769:	       (sql (string-append "SELECT plate_set.num_plates,  plate_set.plate_format_id FROM plate_set WHERE plate_set.ID =" psid ))
./app/controllers/plateset.scm:773:	       (sql2 (string-append "SELECT get_number_samples_for_psid(" psid ")"))
./app/controllers/plateset.scm:790:	 (set! results  (string-append results "(" (caar lst) ", " (cadar lst) ", '"  (caddar lst)   "')" ))
./app/controllers/plateset.scm:793:	 (set! results (string-append results "(" (caar lst) ", " (cadar lst) ", '"  (caddar lst)   "')," ))
./app/controllers/plateset.scm:807:	     (header (string-split ret #\tab))
./app/controllers/plateset.scm:811:				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/plateset.scm:812:					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/plateset.scm:815:			    (sql (string-append "INSERT INTO temp_accs_id (plate_order, by_col, accs_id) VALUES " holder2)))	 
./app/controllers/plateset.scm:842:	       (sql3 (string-append "SELECT process_access_ids(" psid ")"))
./app/controllers/plateset.scm:844:	       (dest (string-append "/plateset/getps?id=" prjid))
./app/controllers/plateset.scm:866:	       (start (map string-split all-ps-ids (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:869:	       (sql (string-append "SELECT plate_set_name, descr, plate_set.num_plates FROM plate_set WHERE plate_set.ID =" psid ))
./app/controllers/plateset.scm:889:	 (set! results  (string-append results "(" (caar lst) ", '" (cadar lst)   "')" ))
./app/controllers/plateset.scm:892:	 (set! results (string-append results "(" (caar lst) ", '" (cadar lst)   "')," ))
./app/controllers/plateset.scm:906:	     (header (string-split ret #\tab))
./app/controllers/plateset.scm:910:				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/plateset.scm:911:					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/plateset.scm:914:			    (sql (string-append "INSERT INTO temp_barcode_id (plate_order, barcode_id) VALUES " holder2)))	 
./app/controllers/plateset.scm:938:	       (sql3 (string-append "SELECT process_barcode_ids(" psid ")"))
./app/controllers/plateset.scm:940:	       (dest (string-append "/plate/getpltforps?id=" psid))
./app/controllers/plateset.scm:966:	       (start (string-split a  #\+)) ;;(1 2 96 1 1) psid num-plates format srclytid numreps?
./app/controllers/plateset.scm:968:	        ;; ;;(ps-num-text  (string-join (map string-append d (map cadr start) (circular-list ");"))))
./app/controllers/plateset.scm:969:	        (srcnplates  ( string->number  (cadr start)))
./app/controllers/plateset.scm:971:	        (destformat (number->string (* (string->number srcformat) 4)))
./app/controllers/plateset.scm:973:	        (sql2 (string-append "SELECT name, descr from plate_layout_name where id =" srclytid))
./app/controllers/plateset.scm:975:	        (srcspllyttxt (string-append  (cdar  holder2)  "; "  (cdadr  holder2)) )			     			   
./app/controllers/plateset.scm:976:	       (sql3 (string-append "SELECT id, plate_type_name from plate_type"))
./app/controllers/plateset.scm:1011:			   (destnplates (number->string (ceiling (/ (* (string->number srcnplates) (string->number destsamprep)) 4))))			   
./app/controllers/plateset.scm:1012:			   (destlytdescr (string-append destsamprep "S" desttargrep "T"))			  
./app/controllers/plateset.scm:1013:			   (sql (string-append "select id, sys_name, name, descr FROM plate_layout_name, layout_source_dest WHERE layout_source_dest.src =" srclytid  " AND layout_source_dest.dest = plate_layout_name.id AND plate_layout_name.descr='" destlytdescr "'"))
./app/controllers/plateset.scm:1019:			   (destlyttxt (string-append destlytsysname ";" destlytname ";" destlytdescr))
./app/controllers/plateset.scm:1020:			  (sql2 (string-append "SELECT id, target_layout_name_name FROM target_layout_name WHERE (project_id=" prjid " AND reps = " desttargrep ") OR (project_id IS NULL AND reps =" desttargrep ")"))
./app/controllers/plateset.scm:1060:			   (destnplates (number->string (ceiling (/ (* (string->number srcnplates) (string->number destsamprep)) 4))))			   
./app/controllers/plateset.scm:1061:			   (destlytdescr (string-append destsamprep "S" desttargrep "T"))
./app/controllers/plateset.scm:1063:			   (sql (string-append "SELECT reformat_plate_set("  srcpsid ", " srcnplates ", "  destsamprep  ", '" destdescr "', '" destname "', " destnplates", " destformat ", "  desttype ", "  prjid ", "  destlytid ", '" sid "', "  desttrglyt  ")"))
./app/controllers/plateset.scm:1067:		      (redirect-to rc (get-redirect-uri (string-append "/plateset/getps?id=" prjid)))
./app/controllers/plateset.scm:1085:            (cons (string-append "<tr><td>" sampleid "</td><td>" src-plate "</td><td>" src-well "</td><td>" dest-plate "</td><td>" dest-well "</td></tr>")
./app/controllers/plateset.scm:1103:			   (start (map string-split all-ps-ids (circular-list #\+))) ;;((1 2 96 1) (2 2 96 1))
./app/controllers/plateset.scm:1106:			   (sql (string-append "SELECT sample_id, source_plate, source_well, dest_plate, dest_well FROM worklists WHERE rearray_pairs_id ="  wl ))
./app/controllers/plateset.scm:1108:			   (body  (string-concatenate (prep-wl-rows holder)))
./app/controllers/utilities.scm:27:(define (process-item x) (string-append "<tr><th>"(car x) "</th><th>" (cadr x) "</th></tr>"))
./app/controllers/utilities.scm:68:			   (sql  (string-append "select id, password from lnuser where lnuser_name ='" user "'" ))
./app/controllers/utilities.scm:73:				      (dummy (DB-get-all-rows (:conn rc (string-append "INSERT INTO lnsession(lnuser_id) VALUES('" userid "')"))))
./app/controllers/utilities.scm:85:		    (redirect-to rc  (get-redirect-uri (string-append "../software/" topic "/index.html") )))))
./app/controllers/utilities.scm:114:				 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/utilities.scm:136:			  (let*((sql (string-append "UPDATE config SET cust_id='" cust-id "', cust_key= '" cust-key "', cust_email='" email "' WHERE id=1"))
./app/controllers/utilities.scm:144:				 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/utilities.scm:169:;; 			   (therequest (string-append "http://labsolns.com/software/register/insert.php?fname=" fname "&lname=" lname "&institution=" inst "&email=" email))
./app/controllers/utilities.scm:171:;; 			   (bv (string->utf8 "test"))
./app/controllers/utilities.scm:186:;; 		      ;; 	  (let*((sql (string-append "UPDATE config SET cust_id='" cust-id "', cust_key= '" cust-key "', cust_email='" email "' WHERE id=1"))
./app/controllers/utilities.scm:194:;; 		      ;; 		 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/utilities.scm:229:;; 				 (alltext (string-append "Customer ID:&nbsp;" vcust "\n\n"
./app/controllers/assayrun.scm:41:            (cons (string-append  index "\t"response "\t" type "\n")
./app/controllers/assayrun.scm:67:	      (cons (string-append "<tr><td>" assay-run-sys-name "</td><td>" assay-run-name "</td><td>" assay-type-name "</td><td><a href=\"/hitlist/gethlbyid?id=" (substring hit-list-sys-name 3) "\">"  hit-list-sys-name "</a></td><td>"  hit-list-name "</td><td>" descr "</td><td>" nhits "</td><tr>")
./app/controllers/assayrun.scm:74:  (let* ((sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_type.assay_type_name, hit_list.hitlist_sys_name, hit_list.hitlist_name, hit_list.descr, hit_list.n  FROM assay_run, plate_set, hit_list, assay_type WHERE assay_type.id=assay_run.assay_type_id AND hit_list.assay_run_id=assay_run.id  AND assay_run.plate_set_id=plate_set.id AND assay_run.id =" id ))
./app/controllers/assayrun.scm:76:	(string-concatenate (prep-hl-for-ar-rows holder))))
./app/controllers/assayrun.scm:92:            (cons (string-append "<tr><td>" assay-run-sys-name "</td><td>" assay-run-name "</td><td>" descr "</td><td>" assay-type-name "</td><td><a href=\"/layout/lytbyid?id=" lytid  "\">" sys-name "</a></td><td>" name "</td><tr>")
./app/controllers/assayrun.scm:114:(string-append "SELECT  ROW_NUMBER () OVER (ORDER BY assay_result." column " DESC), assay_result." column ", plate_layout.well_type_id FROM assay_run, assay_result JOIN plate_layout ON ( assay_result.well = plate_layout.well_by_col) WHERE assay_result.assay_run_id = assay_run.id  AND plate_layout.plate_layout_name_id = assay_run.plate_layout_name_id AND assay_run.ID =" arid)
./app/controllers/assayrun.scm:124:;; (string-append  "SELECT  ROW_NUMBER () OVER (ORDER BY assay_result." column " DESC), assay_result." column ", plate_layout.well_type_id FROM assay_run, assay_result JOIN plate_layout ON ( assay_result.well = plate_layout.well_by_col) WHERE assay_result.assay_run_id = assay_run.id  AND plate_layout.plate_layout_name_id = assay_run.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result." column " > " threshold " AND assay_run.ID =" arid) ))
./app/controllers/assayrun.scm:134:(string-append  "SELECT  ROW_NUMBER () OVER (ORDER BY assay_result." column " DESC), assay_result." column ", plate_layout.well_type_id FROM  assay_result, assay_run, plate_layout_name, plate_layout, plate_set, plate, plate_plate_set, well_numbers, well, well_sample WHERE assay_run.plate_set_id = plate_set.id AND assay_run.plate_layout_name_id = plate_layout_name.id AND assay_run.id=assay_result.assay_run_id AND assay_result.plate_order = plate_plate_set.plate_order AND assay_result.well = well.by_col AND plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.plate_format_id = well_numbers.plate_format AND plate_layout.well_by_col=well.by_col AND plate_set.id = plate_plate_set.plate_set_id AND plate_plate_set.plate_id = plate.id AND plate.id = well.plate_id AND well.by_col = well_numbers.by_col AND well_sample.well_id =  well.id AND well.by_col=well_numbers.by_col AND plate_layout_name.id= plate_layout.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result." column " > " threshold " AND assay_run.ID =" arid) ))
./app/controllers/assayrun.scm:147:    (string-append  "select " metric " from assay_run_stats where assay_run_id=" arid " AND response_type =" response ) ))
./app/controllers/assayrun.scm:160:			  (outfile (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "script" "txt")))			  
./app/controllers/assayrun.scm:165:			  (sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_run.descr, assay_type.assay_type_name, plate_layout_name.sys_name, plate_layout_name.name FROM assay_run, assay_type, plate_layout_name WHERE assay_run.plate_layout_name_id=plate_layout_name.id AND assay_run.assay_type_id=assay_type.id AND assay_run.id =" arid ))
./app/controllers/assayrun.scm:167:			  (body (string-concatenate (prep-ar-rows-no-link holder))) ;; this is the top descriptive table
./app/controllers/assayrun.scm:171:			  (data-body  (string-concatenate (prep-ar-for-g holder2)))
./app/controllers/assayrun.scm:177: 			 ;; (outfile2 (string-append "\"file:///" outfile "\""))
./app/controllers/assayrun.scm:200:;; 			  (outfile (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "ar" "png")))			  
./app/controllers/assayrun.scm:205:;; 			  (sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_run.descr, assay_type.assay_type_name, plate_layout_name.sys_name, plate_layout_name.name FROM assay_run, assay_type, plate_layout_name WHERE assay_run.plate_layout_name_id=plate_layout_name.id AND assay_run.assay_type_id=assay_type.id AND assay_run.id =" arid ))
./app/controllers/assayrun.scm:207:;; 			  (body (string-concatenate (prep-ar-rows-no-link holder))) ;; this is the top descriptive table
./app/controllers/assayrun.scm:211:;; 			  (data-body  (string-concatenate (prep-ar-for-g holder2)))
./app/controllers/assayrun.scm:217:;;  			  (outfile2 (string-append "\"file:///" outfile "\""))
./app/controllers/assayrun.scm:241:	     (header (string-split ret #\tab))
./app/controllers/assayrun.scm:245:				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/assayrun.scm:246:					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/assayrun.scm:265:			  (outfile (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "script" "txt")))			  
./app/controllers/assayrun.scm:276:			  (threshold  (string->number thresholdstr))
./app/controllers/assayrun.scm:281:			  (data-body  (string-concatenate (prep-ar-for-g holder2)))
./app/controllers/assayrun.scm:286:			  ;;(outfile2 (string-append "\"../" outfile "\""))
./app/controllers/assayrun.scm:304:	(sql (string-append "select id, hitlist_sys_name, hitlist_name, descr FROM hit_list WHERE  assay_run_id =" arid ))
./app/controllers/assayrun.scm:306:	(body (string-concatenate (prep-hl-rows holder))))
./app/controllers/assayrun.scm:317:            (cons (string-append "<tr><td><a href=\"/hitlist/getid?id=" (number->string (cdr (car x))) "\">" hit-list-sys-name "</a></td><td>" hit-list-name "</td><td>" descr "</td><tr>")
./app/controllers/assayrun.scm:346:            (cons (string-append "<tr><td>" assay-run-sys-name "</td><td>" plate-set-sys-name "</td><td>" plate-sys-name "</td><td>" plate-order "</td><td>" well-name "</td><td>" type-well "</td><td>" by-col "</td><td>" response "</td><td>" bkgrnd-sub "</td><td>" norm "</td><td>" norm-pos "</td><td>" p-enhance "</td><td>" sample-sys-name "</td><td>" accs-id "</td><td>" target-name"</td><td>" target-accs "</td></tr>")
./app/controllers/assayrun.scm:362:			  (sql  (string-append "Select * from get_all_data_for_assay_run(" arid ")"))			  
./app/controllers/assayrun.scm:364:			  (body (string-concatenate (prep-alldata holder)))
./app/controllers/assayrun.scm:432:			 (stats (DB-get-all-rows (:conn rc  (string-append "select response_type,  max_response, min_response, mean_bkgrnd, std_dev_bkgrnd,  mean_pos,  stdev_pos, mean_neg_3_sd, mean_neg_2_sd, mean_pos_3_sd,  mean_pos_2_sd from assay_run_stats where assay_run_id=1"))))
./app/controllers/assayrun.scm:461:;; 	(sql (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_run.descr, assay_type.assay_type_name, plate_layout_name.sys_name, plate_layout_name.name FROM assay_run, assay_type, plate_layout_name WHERE assay_run.plate_layout_name_id=plate_layout_name.id AND assay_run.assay_type_id=assay_type.id AND assay_run.id =" arid ))
./app/controllers/assayrun.scm:463:;; 	(body (string-concatenate (prep-ar-rows-no-link holder)))
./app/controllers/assayrun.scm:466:;; 	(dummy3 (get-assayrun-table-for-r arid (string-append "pub/" infile) rc))
./app/controllers/assayrun.scm:467:;; 	(dummy4 (get-assayrun-stats-for-r arid (string-append "pub/" infile2) rc))
./app/controllers/assayrun.scm:468:;; 	(dummy5 (system (string-append "Rscript --vanilla ../lnserver/rscripts/plot-assayrun.R pub/" infile " pub/" infile2 " pub/" outfile " pub/" hitfile " " response  " " threshold )))
./app/controllers/assayrun.scm:469:;; 	(outfile2 (string-append "\"../" outfile "\""))
./app/controllers/assayrun.scm:486:;;   (let* ((table-header (string-append "assay.run.id\tplate.order\twell\tresponse\tbkgrnd.sub\tnorm\tnorm.pos\tp.enhance\ttype\treps\ttrgt\tsmplid\n"))
./app/controllers/assayrun.scm:487:;; 	 ;;(sql  (string-append "select assay_run_id, plate_order, well, response, bkgrnd_sub, norm, norm_pos, p_enhance, well_type.name from assay_result, assay_run, well_numbers, plate_layout_name, plate_layout, well_type where plate_layout_name.id=plate_layout.plate_layout_name_id AND plate_layout_name.plate_format_id=well_numbers.plate_format AND plate_layout.well_type_id=well_type.id AND plate_layout.well_by_col=assay_result.well AND assay_result.assay_run_id=assay_run.id AND assay_run.plate_layout_name_id=plate_layout_name.id AND well_numbers.by_row=assay_result.well AND assay_run_id=" id))
./app/controllers/assayrun.scm:488:;; 	 (sql (string-append "SELECT * FROM get_scatter_plot_data(" arid ")"))
./app/controllers/assayrun.scm:490:;; 	 (body (string-append table-header (string-concatenate (prep-ar-for-r holder))))
./app/controllers/target.scm:30:	      (cons (string-append "<tr><td>"  target-sys-name "</td><td>" prj-id "</td><td>" trg-name "</td><td>" descr "</td><td>" accs "</td></tr>")
./app/controllers/target.scm:47:			 (sql (string-append "select id, target_sys_name, project_id, target_name, descr, accs_id from target" ))
./app/controllers/target.scm:49:			 (body  (string-concatenate  (prep-trg-rows holder)) ))
./app/controllers/target.scm:61:	    (cons (string-append "<tr><td>"
./app/controllers/target.scm:63:				     (string-append "PRJ-" prj-id)
./app/controllers/target.scm:81:			(sql (string-append "select id, project_id, target_layout_name_sys_name, target_layout_name_name, target_layout_name_desc, reps from target_layout_name" ))
./app/controllers/target.scm:83:			(body  (string-concatenate  (prep-trglytname-rows holder)) ))
./app/controllers/target.scm:97:	    (cons (string-append "<tr><td>" trg-sys-name  "</td><td>"
./app/controllers/target.scm:99:				     (string-append "PRJ-" prj-id)
./app/controllers/target.scm:117:			 (sql (string-append "select target.id, target.target_sys_name, target.descr, target_layout_name.project_id, target.target_name, target_layout.quad, target_layout_name_sys_name, target_layout_name_name, target_layout_name_desc, target_layout_name.reps, target.accs_id from target_layout_name, target_layout, target WHERE target_layout.target_layout_name_id=target_layout_name.id AND target_layout.target_id=target.id AND target_layout_name.id=" id))
./app/controllers/target.scm:124:			 (header (string-append "Targets in " trg-lyt-sys-name "\nName: " trg-lyt-name "\nDescription: " trg-lyt-descr "\nReplication: " reps))
./app/controllers/target.scm:125:			 (body  (string-concatenate  (prep-trglytbyid-rows holder)) ))
./app/controllers/target.scm:131:	 (set! all-prj (cons (string-append "<option value=\"" (cdaar lst) "\">"(cdaar lst) "</option>") all-prj))
./app/controllers/target.scm:134:	 (set! all-prj (cons (string-append "<option value=\"" (cdaar lst) "\">"  (cdaar lst) "</option>") all-prj))
./app/controllers/target.scm:150:	     (header (string-split ret #\tab))
./app/controllers/target.scm:158:					   (set! holder (cons (string-split ret #\tab) holder))
./app/controllers/target.scm:160:				 (holder2 (string-concatenate (map process-list-of-rows holder)))
./app/controllers/target.scm:161:				 (sql (string-append "select bulk_target_upload('{" (xsubstring holder2 0 (- (string-length holder2) 1))  "}')" ))) ;;trim the final comma
./app/controllers/target.scm:189:	 (set! results  (cons   (string-split (caar lst)  #\tab) results))
./app/controllers/target.scm:192:	 (set! results (cons (string-split (caar lst)  #\tab)  results))
./app/controllers/target.scm:201:	 ((= (length (car lst)) 3) (set! results  (string-append results "{\"" (string-trim-both (caar lst) white-chars) "\", \"" (string-trim-both (cadar lst) white-chars) "\", \"\",  \""  (string-trim-both (caddar lst) white-chars)   "\"}," )))
./app/controllers/target.scm:202:	  ((= (length (car lst)) 4)(set! results  (string-append results "{\"" (string-trim-both (caar lst) white-chars) "\", \""  (string-trim-both (cadar lst) white-chars)  "\", \""    (string-trim-both (caddar lst) white-chars)   "\", \""  (string-trim-both (car (cdddar lst)) white-chars)   "\"}," )))
./app/controllers/target.scm:207:	 ((= (length (car lst)) 3) (set! results  (string-append results "{\"" (caar lst) "\", \"" (cadar lst) "\", \"\",  \""  (caddar lst)   "\"}," )))
./app/controllers/target.scm:208:	  ((= (length (car lst)) 4)(set! results  (string-append results "{\"" (caar lst) "\", \""  (cadar lst)  "\", \""    (caddar lst)   "\", \""   (car (cdddar lst))   "\"}," ))))
./app/controllers/target.scm:223:			 (b (map list (cdr (string-split a #\newline))))
./app/controllers/target.scm:226:			 (e (substring d 0 (- (string-length d) 1)))  ;;remove final comma
./app/controllers/target.scm:227:			 (sql (string-append "select bulk_target_upload('{" e "}')"))
./app/controllers/target.scm:252:;; 			 (sql (string-append "select new_target(" id ", '" tname "', '" desc "', '" accs "')"))			 
./app/controllers/target.scm:271:			 (get-ps-link (string-append "/plateset/getps?id=" prjid))
./app/controllers/target.scm:272:			 (ps-add-link (string-append "/plateset/add?format=96&type=master&prjid=" prjid))	    
./app/controllers/target.scm:276:			 (sql (string-append "select new_target(" id ", '" tname "', '" desc "', '" accs "')"))			 
./app/controllers/target.scm:292:			 (get-ps-link (string-append "/plateset/getps?id=" prjid))
./app/controllers/target.scm:293:			 (ps-add-link (string-append "/plateset/add?format=96&type=master&prjid=" prjid))	    
./app/controllers/target.scm:306:	 (set! all-trgs (cons (string-append "<option value=" (object->string (cdaar lst)) ">" (string-append  (cdadar lst) " "  (cdar (cddar lst))) "</option>") all-trgs))
./app/controllers/target.scm:309:	 (set! all-trgs (cons (string-append "<option value=\"" (object->string (cdaar lst)) "\">"(string-append  (cdadar lst) " "  (cdar (cddar lst))) "</option>") all-trgs))
./app/controllers/target.scm:343:			 (get-ps-link (string-append "/plateset/getps?id=" prjid))
./app/controllers/target.scm:344:			 (ps-add-link (string-append "/plateset/add?format=96&type=master&prjid=" prjid))	    
./app/controllers/target.scm:360:			 (sql (string-append "select new_target_layout_name(" id ", '" tlytname "', '" desc "', '" reps "', '" q1 "', '" q2 "', '" q3 "', '" q4 "')"))
./app/controllers/users.scm:20:      (substring (string->sha-256 (string-append passwd salt)) 0 16)
./app/controllers/users.scm:21:      (substring (string->sha-256 (string-append salt)) 0 16)
./app/controllers/users.scm:33:            (cons (string-append "<tr><td> <input type=\"radio\" id=\"" id  "\" name=\"id\" value=\"" id   "\"></td><td> " id "</td><td> " group-name "</td><td> " lnuser-name "</td><td> " email "</td></tr>")
./app/controllers/users.scm:51:		       (body (string-concatenate (prep-user-rows holder)))
./app/controllers/users.scm:73:		       ;; (register-url (string-append "http://" help-url-prefix "register"))
./app/controllers/users.scm:91:	(sql (string-append "insert into person (lnuser, passwd, salt, email, usergroup ) VALUES ('" name "', '" pwd "', '" salt "', '" email "', '" usergroup "')"))
./app/controllers/users.scm:107:;; 			 (insert-string (string-append "select new_user('"  user-name "', '" tags "', '" pw "', '" group "')"))
./app/controllers/plate.scm:34:            (cons (string-append "<tr><td> <input type=\"checkbox\" id=\"" plate-sys-name  "\" name=\"plate-id\" value=\"" pltid "\" onclick=\"handleChkbxClick()\"></td><td><a href=\"getwellsforplt?pltid=" pltid "&psid=" psid "\">" plate-sys-name "</a></td><td>"  order  "</td><td>" type  "</td><td>"  format  "</td><td>" barcode  "</td></tr>")
./app/controllers/plate.scm:49:            (cons (string-append "<tr><td><a href=\"../assayrun/getarid?arid="  (number->string (cdr (car x))) "\">" assay-run-sys-name "</a></td><td>" assay-run-name "</td><td>" descr "</td><td>" assay-type-name "</td><td>" sys-name "</td><td>" name "</td><tr>")
./app/controllers/plate.scm:63:            (cons (string-append "<tr><td>" assay-run-sys-name "</td><td><a href=\"/hitlist/gethlbyid?id="  (number->string (cdr (car x))) "\">" hitlist-sys-name "</a></td><td>" hitlist-name "</td><td>" descr "</td><td>" n "</td><tr>")
./app/controllers/plate.scm:79:		       (sql (string-append "SELECT plate_plate_set.plate_set_id, plate.id, plate.plate_sys_name, plate_plate_set.plate_order,  plate_type.plate_type_name, plate_format.format, plate.barcode FROM plate_set, plate, plate_type, plate_format, plate_plate_set WHERE plate_plate_set.plate_set_id =" psid " AND plate.plate_type_id = plate_type.id AND plate_plate_set.plate_id = plate.id AND plate_plate_set.plate_set_id = plate_set.id  AND plate_format.id = plate.plate_format_id ORDER BY plate_plate_set.plate_order DESC" ))
./app/controllers/plate.scm:81:		       (body (string-concatenate (prep-plt-for-ps-rows holder)))
./app/controllers/plate.scm:82:		       (sql2 (string-append "select assay_run.id, assay_run.assay_run_sys_name, assay_run.assay_run_name, assay_run.descr, assay_type.assay_type_name, plate_layout_name.sys_name, plate_layout_name.name FROM assay_run, assay_type, plate_layout_name WHERE assay_run.plate_layout_name_id=plate_layout_name.id AND assay_run.assay_type_id=assay_type.id AND plate_set_id =" psid ))
./app/controllers/plate.scm:84:		       (body2 (string-concatenate (prep-ar-for-ps-rows holder2)))
./app/controllers/plate.scm:85:		       (sql3 (string-append "select hit_list.id, hitlist_sys_name, hitlist_name, hit_list.descr, n, assay_run_sys_name FROM hit_list, assay_run WHERE  hit_list.assay_run_id=assay_run.id AND assay_run.plate_set_id=" psid ))
./app/controllers/plate.scm:87:		       (body3 (string-concatenate (prep-hl-for-ps-rows holder3)))
./app/controllers/plate.scm:111:            (cons (string-append "<tr><td><a href=\"/plate/getpltforps?id=" (substring (cdr (car x)) 3) "\">" plt-set-sys-name "</a></td><td>"  plate-sys-name "</td><td>" plate-order "</td><td>"  well-name  "</td><td>" well-type  "</td><td>" by-col  "</td><td>"  splsys  "</td><td>" accs  "</td></tr>")
./app/controllers/plate.scm:128:		       (sql (string-append "SELECT  plate_set.plate_set_sys_name , plate.plate_sys_name, plate_plate_set.plate_order, well_numbers.well_name, well_type.name, well.by_col, sample.sample_sys_name, sample.accs_id FROM  plate_set, plate_plate_set, plate, well, well_numbers, plate_layout, well_type, sample, well_sample WHERE plate_plate_set.plate_set_id=plate_set.id AND plate_plate_set.plate_id=plate.ID and plate.id=well.plate_id AND plate_set.ID =" psid " AND well_numbers.plate_format=plate_set.plate_format_id AND well_numbers.by_col=well.by_col AND plate_layout.plate_layout_name_id=plate_set.plate_layout_name_id AND plate_layout.well_type_id=well_type.ID AND plate_layout.well_by_col=well.by_col AND well_sample.well_id=well.id AND well_sample.sample_id=sample.id AND plate.id=" pltid ))
./app/controllers/plate.scm:132:		       (body (string-concatenate (prep-wells-for-plt-rows holder)))
./app/controllers/plate.scm:152:		       (sql (if include-controls (string-append "SELECT  plate_set.plate_set_sys_name , plate.plate_sys_name, plate_plate_set.plate_order, well_numbers.well_name, well_type.name, well.by_col, a.sample_sys_name, a.accs_id FROM  plate_set, plate_plate_set, plate_layout, well_numbers, well_type, plate, well LEFT JOIN (SELECT well_sample.well_id, sample.sample_sys_name, sample.accs_id FROM well, well_sample, sample WHERE well_sample.well_id=well.id and well_sample.sample_id=sample.id) AS a ON well.id=a.well_id WHERE plate_plate_set.plate_set_id=plate_set.id AND plate_plate_set.plate_id=plate.ID and plate.id=well.plate_id AND plate_set.ID =" psid " AND well_numbers.plate_format=plate_set.plate_format_id AND plate_layout.plate_layout_name_id=plate_set.plate_layout_name_id AND plate_layout.well_type_id=well_type.ID AND plate_layout.well_by_col=well.by_col AND plate.id=well.plate_id AND plate_plate_set.plate_id=plate.id AND well.by_col= well_numbers.by_col ORDER BY plate.id DESC, well.by_col DESC") (string-append "SELECT  plate_set.plate_set_sys_name , plate.plate_sys_name, plate_plate_set.plate_order, well_numbers.well_name, well_type.name, well.by_col, sample.sample_sys_name, sample.accs_id FROM  plate_set, plate_plate_set, plate, well, well_numbers, plate_layout, well_type, sample, well_sample WHERE plate_plate_set.plate_set_id=plate_set.id AND plate_plate_set.plate_id=plate.ID and plate.id=well.plate_id AND plate_set.ID =" psid " AND well_numbers.plate_format=plate_set.plate_format_id AND well_numbers.by_col=well.by_col AND plate_layout.plate_layout_name_id=plate_set.plate_layout_name_id AND plate_layout.well_type_id=well_type.ID AND plate_layout.well_by_col=well.by_col AND well_sample.well_id=well.id AND well_sample.sample_id=sample.id" )))
./app/controllers/plate.scm:154:		       (body (string-concatenate (prep-wells-for-plt-rows holder))))
./app/controllers/plate.scm:164:	(set! result (string-append result (car lst)))
./app/controllers/plate.scm:167:	(set! result (string-append result (car lst) ","))
./app/controllers/plate.scm:189:		       (sql (string-append "select plate_format_id, plate_layout_name_id from plate where id =" first-plate))
./app/controllers/plate.scm:193:		       (sql2 (string-append "SELECT name, descr from plate_layout_name where id ="  lyt-name-id))
./app/controllers/plate.scm:195:		       (lyttxt (string-append  (cdar  holder2)  "; "  (cdadr  holder2)) )			     			   
./app/controllers/plate.scm:196:		       (sql3 (string-append "SELECT id, plate_type_name from plate_type"))
./app/controllers/plate.scm:232:			   (sql (string-append "SELECT new_plate_set_from_group('" descr "', '" psname "', " num-plates ", " format ", " type ", " prjid ", " lyt-name-id ", '" sid "')"))
./app/controllers/plate.scm:235:			  ;; (sql2 (string-append "select plate_set.id, plate_set_sys_name, plate_set_name, plate_set.descr, plate_type_name, num_plates, plate_set.plate_format_id, plate_layout_name_id, plate_layout_name.replicates from plate_set, plate_type, plate_layout_name where plate_set.plate_type_id=plate_type.id AND plate_set.plate_layout_name_id=plate_layout_name.id AND plate_set.project_id =" prjid ))
./app/controllers/plate.scm:240:			   (sql2 (string-append "SELECT assoc_plate_ids_with_plate_set_id(ARRAY[" all-plate-ids-txt "]," psid ")" ))
./app/controllers/plate.scm:243:		      (redirect-to rc (get-redirect-uri (string-append "/plateset/getps?id=" prjid)))
./app/controllers/layout.scm:47:		(id-html (string-append "<a href=\"/layout/lytbyid?id=" id "\">" sys-name "</a>") ))
./app/controllers/layout.scm:48:            (cons (string-append "<tr><td>" id-html "</td><td>" name "</td><td>" descr "</td>
./app/controllers/layout.scm:55:  (let* ((sql (string-append "select  plate_format_id from plate_layout_name where id="  id))
./app/controllers/layout.scm:60:;;   (let* ((table-header (string-append "format\twell\ttype\trow\trow.num\tcol\treplicates\ttargets\n"))
./app/controllers/layout.scm:61:;; 	 (sql (string-append "select plate_format_id, by_col, well_type_id,row, row_num, col, plate_layout.replicates, plate_layout.target from plate_layout_name, plate_layout, well_numbers where plate_layout.well_by_col=well_numbers.by_col and plate_layout.plate_layout_name_id = plate_layout_name.id and well_numbers.plate_format=plate_layout_name.plate_format_id AND plate_layout.plate_layout_name_id =" id))
./app/controllers/layout.scm:63:;; 	(body (string-concatenate (prep-lyt-for-r holder))))
./app/controllers/layout.scm:64:;;     (string-append table-header body )))
./app/controllers/layout.scm:85:;;             (cons (string-append  format "\t" well "\t" type "\t" row "\t" row-num "\t" col "\t" replicates "\t" targets  "\n")
./app/controllers/layout.scm:102:	   (body (string-concatenate (prep-lyt-rows holder))))
./app/controllers/layout.scm:109:	(set! result (string-append result (car lst)))
./app/controllers/layout.scm:112:	(set! result (string-append result (car lst) ", "))
./app/controllers/layout.scm:136:    (set! holder (cons  (cdr (string-split (string-trim-both (caar lst) cs) #\tab))  holder))
./app/controllers/layout.scm:139:    (set! holder (cons (cdr (string-split (string-trim-both (caar lst) cs) #\tab))  holder))
./app/controllers/layout.scm:158:	 (by-col (car  (string-split row  #\tab)))
./app/controllers/layout.scm:159:	 (type (cadr  (string-split row  #\tab)))
./app/controllers/layout.scm:160:	 (key (cons 'by_col  (string->number by-col)))
./app/controllers/layout.scm:175:    (string-append by-col "\t" row "\t" type)))
./app/controllers/layout.scm:182:    (let* ((by-col (car (string-split (string-trim-both (caar lst) cs) #\tab)))
./app/controllers/layout.scm:183:	   (type (string->number (cadr (string-split (string-trim-both (caar lst) cs) #\tab))))
./app/controllers/layout.scm:184:	   (well-num-row (get-roi (string->number by-col) well-nums))
./app/controllers/layout.scm:196:	   (dummy (set! results (string-append results col "\t" (number->string rev-row) "\t" label "\t"  color "\n")))	   
./app/controllers/layout.scm:200:    (let* ((by-col (car (string-split (string-trim-both (caar lst) cs) #\tab)))
./app/controllers/layout.scm:201:	   (type (string->number (cadr (string-split (string-trim-both (caar lst) cs) #\tab))))
./app/controllers/layout.scm:202:	   (well-num-row (get-roi (string->number by-col) well-nums))
./app/controllers/layout.scm:214:	   (dummy (set! results (string-append results col "\t" (number->string rev-row) "\t" label "\t" color "\n")))	   
./app/controllers/layout.scm:258:	    (infile (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "lyt" "txt"))) ;;do not incorporate the "pub" here because the html
./app/controllers/layout.scm:259:	    (spl-out  (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "lyt" "txt"))) ;; does not want the pub
./app/controllers/layout.scm:261:	    (b (map list (cdr (string-split a #\newline))))
./app/controllers/layout.scm:276:	   ;; (dummy (system (string-append "Rscript --vanilla rscripts/plot-review-layout.R pub/" infile " pub/" spl-out " " format )))
./app/controllers/layout.scm:279:	    ;; (sql (string-append sqlprefix sqlsuffix))
./app/controllers/layout.scm:282:	    (sql (string-append "select  by_col, col, row_num  FROM well_numbers where well_numbers.plate_format=" format))
./app/controllers/layout.scm:288:	   ;; (spl-out2 (string-append "\"../" spl-out "\"" ))
./app/controllers/layout.scm:302:    (if (null? (car list)) #f (set! sqlsuffix (string-append sqlsuffix "(" (string-trim-both (caar list) cs) ", " (string-trim-both  (cadar list) cs)  ", 1, 1) "))) 
./app/controllers/layout.scm:305:    (if (null? (car list)) #f (set! sqlsuffix (string-append sqlsuffix "(" (string-trim-both  (caar list) cs) ", " (string-trim-both  (cadar list) cs)  ", 1, 1), ")) )
./app/controllers/layout.scm:318:	     (header (string-split ret #\tab))
./app/controllers/layout.scm:319:	     (result (if (and (string=? (string-trim-both (car header) cs) "well")
./app/controllers/layout.scm:320:			     (string=? (string-trim-both (cadr header) cs) "type"))
./app/controllers/layout.scm:324:					   (set! holder (cons (string-split ret #\tab) holder))
./app/controllers/layout.scm:345:	  (sqlsuffix (get-sql-layout-file (string-append "pub/" infile)))
./app/controllers/layout.scm:347:	  (sql (string-append sqlprefix sqlsuffix))
./app/controllers/layout.scm:349:	  (sql (string-append "SELECT create_layout_records('" lytname "', '" descr "', '" contloc "', " ncontrols ", " nunks ", " format ", " nedge ")"))
./app/controllers/layout.scm:367:			(spl-out (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "lyt" "txt")))
./app/controllers/layout.scm:368:			(spl-rep-out (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "lyt" "txt")))
./app/controllers/layout.scm:369:			(trg-rep-out (string-append "../../../../../../../../../" (current-toplevel) (get-rand-file-name "lyt" "txt")))	 
./app/controllers/layout.scm:371:			(sql (string-append "SELECT source_dest FROM plate_layout_name WHERE id=" lytid));;determine if source or dest
./app/controllers/layout.scm:374:				 (string-append "select dest from layout_source_dest where src =" lytid);;will get the 5 dest ids
./app/controllers/layout.scm:375:				 (string-append "select dest from layout_source_dest where src =(select src from layout_source_dest where dest = " lytid ") UNION select src from layout_source_dest where dest =" lytid " ORDER BY dest")));;will get all 6 ids
./app/controllers/layout.scm:379:				    (cons (string->number lytid) holder)
./app/controllers/layout.scm:383:			(sql (string-append "select id, sys_name, name, descr, plate_format_id, replicates, targets, use_edge, num_controls, unknown_n, control_loc, source_dest from plate_layout_name where id IN (" allidscomma ") ORDER BY source_dest DESC"));;get the description of each id
./app/controllers/layout.scm:385:			(body (string-concatenate (prep-lyt-rows holder)))
./app/controllers/layout.scm:387:			(sql (string-append "select  row_num, col, well_type_id, plate_layout.replicates, plate_layout.target from plate_layout_name, plate_layout, well_numbers where plate_layout.well_by_col=well_numbers.by_col and plate_layout.plate_layout_name_id = plate_layout_name.id and well_numbers.plate_format=plate_layout_name.plate_format_id AND plate_layout.plate_layout_name_id =" lytid))
./app/controllers/layout.scm:389:			(data-body (string-concatenate (prep-lyt-for-g holder format)))
./app/controllers/layout.scm:394:			 ;;(spl-out2 (string-append "\"../" spl-out "\"" ))
./app/controllers/layout.scm:395:			 ;;(spl-rep-out2 (string-append "\"../" spl-rep-out "\""))
./app/controllers/layout.scm:396:			 ;;(trg-rep-out2  (string-append "\"../" trg-rep-out "\""))
./app/controllers/layout.scm:418:;; 			;;(outfile (string-append  (get-rand-file-name "lyt" "png")))
./app/controllers/layout.scm:420:;; 			(sql (string-append "SELECT source_dest FROM plate_layout_name WHERE id=" lytid))
./app/controllers/layout.scm:423:;; 				 (string-append "select dest from layout_source_dest where src =" lytid)
./app/controllers/layout.scm:424:;; 				 (string-append "select dest from layout_source_dest where src =(select src from layout_source_dest where dest = " lytid ") UNION select src from layout_source_dest where dest =" lytid " ORDER BY dest")))
./app/controllers/layout.scm:428:;; 				    (cons (string->number lytid) holder)
./app/controllers/layout.scm:432:;; 			(sql (string-append "select id, sys_name, name, descr, plate_format_id, replicates, targets, use_edge, num_controls, unknown_n, control_loc, source_dest from plate_layout_name where id IN (" allidscomma ") ORDER BY source_dest DESC"))
./app/controllers/layout.scm:434:;; 			(body (string-concatenate (prep-lyt-rows holder)))
./app/controllers/layout.scm:436:;; 			(sql (string-append "select  row_num, col, well_type_id, plate_layout.replicates, plate_layout.target from plate_layout_name, plate_layout, well_numbers where plate_layout.well_by_col=well_numbers.by_col and plate_layout.plate_layout_name_id = plate_layout_name.id and well_numbers.plate_format=plate_layout_name.plate_format_id AND plate_layout.plate_layout_name_id =" lytid))
./app/controllers/layout.scm:438:;; 			(data-body (string-concatenate (prep-lyt-for-g holder format)))
./app/controllers/layout.scm:442:;; 			 (spl-out2 (string-append "\"../" spl-out "\"" ))
./app/controllers/layout.scm:443:;; 			 (spl-rep-out2 (string-append "\"../" spl-rep-out "\""))
./app/controllers/layout.scm:444:;; 			 (trg-rep-out2  (string-append "\"../" trg-rep-out "\""))
./app/controllers/hitlist.scm:13:  #:use-module (ice-9 string-fun) ;; string-replace-substring
./app/controllers/hitlist.scm:20:	 ;    (ice-9 string-fun) ;; string-replace-substring
./app/controllers/hitlist.scm:31:	      (cons (string-append "<tr><td><a href=\"/hitlist/gethlbyid?id=" id  "\">" hit-list-sys-name "</a></td><td>" hit-list-name "</td><td>" descr "</td><td>" nhits "</td></tr>")
./app/controllers/hitlist.scm:41:	   (sql (string-append "select id, hitlist_sys_name, hitlist_name, descr, n from hit_list where assay_run_id =" id ))
./app/controllers/hitlist.scm:43:	   (body  (string-concatenate  (prep-hl-for-ar-rows holder)) ))  
./app/controllers/hitlist.scm:55:	      (cons (string-append "<tr><td>"  sample-sys-name "</td><td>" prj-id "</td><td>" accs "</td></tr>")
./app/controllers/hitlist.scm:66:	      (cons (string-append "<tr><td> <input type=\"radio\" id=\"psid\" name=\"psid\" value=\"" id "\"></td><td>" id "</td><td>" plate-set-sys-name "</td><td>" type "</td><td>" format "</td><td>" nhits "</td></tr>")
./app/controllers/hitlist.scm:80:			 ;;(sql (string-append "select sample.id, sample.sample_sys_name, sample.project_id, sample.accs_id  from hit_list, sample, hit_sample where sample.id=hit_sample.sample_id AND hit_list.id=hit_sample.hitlist_id AND hitlist_id =" hlid ))
./app/controllers/hitlist.scm:81:			 (sql (string-append "select sample.id, sample.sample_sys_name, plate_set.project_id, sample.accs_id  from hit_list, sample, hit_sample, plate_set, assay_run where sample.id=hit_sample.sample_id AND hit_list.id=hit_sample.hitlist_id AND plate_set.id=assay_run.plate_set_id AND hit_list.assay_run_id=assay_run.id  AND hitlist_id =" hlid ))
./app/controllers/hitlist.scm:84:			 (body  (string-concatenate  (prep-hl-rows holder)) )
./app/controllers/hitlist.scm:85:			 (sql2 (string-append "SELECT MAX(plate_set.id), plate_set.plate_set_sys_name, MAX(plate_type.plate_type_name), MAX(plate_set.plate_format_id), COUNT(sample.ID) FROM plate_set, plate_plate_set, plate_type, plate, well, well_sample, sample WHERE plate_plate_set.plate_set_id=plate_set.ID AND plate_plate_set.plate_id=plate.id AND plate_set.plate_type_id = plate_type.id   and well.plate_id=plate.ID AND well_sample.well_id=well.ID AND well_sample.sample_id= sample.ID  AND sample.id  IN (SELECT  sample.id FROM hit_list, hit_sample, plate_set, assay_run, sample WHERE hit_sample.hitlist_id=hit_list.id  AND hit_sample.sample_id=sample.id  and assay_run.plate_set_id=plate_set.id AND   hit_list.assay_run_id=assay_run.id   AND  hit_sample.hitlist_id IN (SELECT hit_list.ID FROM hit_list, assay_run WHERE hit_list.assay_run_id=assay_run.ID AND hit_list.id= " hlid " and assay_run.ID IN (SELECT assay_run.ID FROM assay_run WHERE assay_run.plate_set_id IN (SELECT plate_set.ID FROM plate_set WHERE plate_set.project_id=" prjid ")))) GROUP BY plate_set.plate_set_sys_name" ))
./app/controllers/hitlist.scm:87:			 (body2  (string-concatenate  (prep-hl-counts holder2)) )
./app/controllers/hitlist.scm:135:	      (cons (string-append "<tr><td><a href=\"/hitlist/gethlbyid?id=" id  "\">" hit-list-sys-name "</a></td><td>" hit-list-name "</td><td>" descr "</td><td>" nhits "</td></tr>")
./app/controllers/hitlist.scm:149:	   (sql (string-append "SELECT hit_list.id, hit_list.hitlist_sys_name, hit_list.hitlist_name, hit_list.descr, hit_list.n FROM hit_list, assay_run, plate_set   WHERE hit_list.assay_run_id=assay_run.id AND assay_run.plate_set_id=plate_set.id AND plate_set.project_id=" prjid ))
./app/controllers/hitlist.scm:151:	   (body  (string-concatenate  (prep-hl-for-prj-rows holder)) ))  
./app/controllers/hitlist.scm:159:	(if (= (string-length (car lst)) 0 ) #f
./app/controllers/hitlist.scm:163:	(if (= (string-length (car lst)) 0 ) #f
./app/controllers/hitlist.scm:172:	(if b (set! results  (string-append   (car lst) "," results))
./app/controllers/hitlist.scm:173:	    (set! results  (string-append   (substring (car lst)  4 (string-length (car lst))) "," results)) )
./app/controllers/hitlist.scm:176:	(if b (set! results  (string-append   (car lst) "," results))
./app/controllers/hitlist.scm:177:	    (set! results  (string-append   (substring (car lst)  4 (string-length (car lst))) "," results)))
./app/controllers/hitlist.scm:200:	   (b (map list (cdr (string-split a #\newline))))
./app/controllers/hitlist.scm:201:	   (c (map (lambda (x)(string-trim-both (car x) white-chars)) b))
./app/controllers/hitlist.scm:205:	   (f (substring e 0 (- (string-length e) 1)))
./app/controllers/hitlist.scm:206:	   (sql (string-append "SELECT new_hit_list('" name "', '" descr "'," num-hits ", " arid ", '" sid "', '{" f "}' )" ))
./app/controllers/hitlist.scm:208:	   (dest (string-append "/assayrun/getid?id=" arid)))  
./app/controllers/hitlist.scm:232:	  ;; (sql (string-append "SELECT hit_list.id, hit_list.hitlist_sys_name, hit_list.hitlist_name, hit_list.descr, hit_list.n FROM hit_list, assay_run, plate_set   WHERE hit_list.assay_run_id=assay_run.id AND assay_run.plate_set_id=plate_set.id AND plate_set.project_id=" arid ))
./app/controllers/hitlist.scm:234:	 ; ;; (body  (string-concatenate  (prep-hl-for-prj-rows holder)) )
./app/controllers/hitlist.scm:251:	   (sql3 (string-append "SELECT id, plate_type_name from plate_type where plate_type_name='rearray'"))
./app/controllers/hitlist.scm:281:	  ;; (platetypes (map number->string (string-split "platetypes" #\+)))
./app/controllers/hitlist.scm:283:	   (sql (string-append "select id, name, descr from plate_layout_name WHERE plate_format_id =" format " AND source_dest='source'"))	  
./app/controllers/hitlist.scm:327:	   (sql (string-append "SELECT unknown_n FROM plate_layout_name WHERE plate_layout_name.ID ="  pltlytid))
./app/controllers/hitlist.scm:330:	   (numplates (ceiling (/ (string->number numhits) num-unks-per-plate)))
./app/controllers/hitlist.scm:334:	   (sql3 (string-append "SELECT new_plate_set('" psdescr "', '" psname "', " (number->string numplates) ", " format  ",2 , " prjid ", " pltlytid  ", '" sid "', false, 3 )"))
./app/controllers/hitlist.scm:336:	   (sql4 (string-append "SELECT rearray_transfer_samples(" psid ", " new-psid ", " hlid ")" ))
./app/controllers/hitlist.scm:339:	   (destination (string-append "plateset/getps?id=" prjid))
./app/controllers/hitlist.scm:361:	 (set! results  (string-append results "<tr><td>" (number->string (cdaar  lst)) "</td><td>" (number->string (cdadar lst)) "</td><td>"  (number->string (cdadr (cdddar lst)))  "</td></tr>" ))
./app/controllers/hitlist.scm:364:	 (set! results  (string-append results "<tr><td>" (number->string (cdaar  lst)) "</td><td>" (number->string (cdadar lst)) "</td><td>" (number->string (cdadr (cdddar lst)))  "</td></tr>" ))
./app/controllers/hitlist.scm:374:;; 	 (set! results  (string-append results "<tr><td>" (number->string (cadr (caar lst))) "</td><td>" (cadar lst) "</td><td>" (cadr (cdddar lst))   "</td></tr>" ))
./app/controllers/hitlist.scm:377:;; 	 (set! results (string-append results "<tr><td>" (number->string (assoc-ref lst "plate_id")) "</td><td>" (number->string (assoc-ref lst "by_col")) "</td><td>"  (number->string (assoc-ref lst "sample_id"))  "</td></tr>" ))
./app/controllers/hitlist.scm:394:;; 	     (header (string-split ret #\tab))
./app/controllers/hitlist.scm:398:;; 				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/hitlist.scm:399:;; 					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/hitlist.scm:411:	 (set! results  (string-append results (number->string (cdadr (cdddar lst)))  ))
./app/controllers/hitlist.scm:414:	 (set! results (string-append results  (number->string (cdadr (cdddar lst)))  "+" ))
./app/controllers/hitlist.scm:422:;; 	 (set! results  (string-append results  (cadr (cdddar lst))  ))
./app/controllers/hitlist.scm:425:;; 	 (set! results (string-append results  (cadr (cdddar lst))  "+" ))
./app/controllers/hitlist.scm:442:	     (header (string-split ret #\tab))
./app/controllers/hitlist.scm:446:				      (if (equal? (car (string-split (stripfix ret) #\tab)) "") #f
./app/controllers/hitlist.scm:447:					  (set! holder (cons (string-split (stripfix ret) #\tab) holder)))
./app/controllers/hitlist.scm:461:(string-append  "SELECT  ROW_NUMBER () OVER (ORDER BY assay_result." column " DESC), assay_result." column ", plate_layout.well_type_id FROM assay_run, assay_result JOIN plate_layout ON ( assay_result.well = plate_layout.well_by_col) WHERE assay_result.assay_run_id = assay_run.id  AND plate_layout.plate_layout_name_id = assay_run.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result." column " > " threshold " AND assay_run.ID =" arid) ))
./app/controllers/hitlist.scm:488:	 ;;  (hitfile (string-append "../lnserver/pub/" (uri-decode (:from-post rc 'get-vals "hitfile"))))
./app/controllers/hitlist.scm:491:	   (sql (string-append "SELECT  plate_plate_set.plate_id, well.by_col, assay_result." column ", plate_layout.well_type_id, well_sample.sample_id FROM assay_result, assay_run, plate_layout_name, plate_layout, plate_set, plate, plate_plate_set, well_numbers, well, well_sample WHERE assay_run.plate_set_id = plate_set.id AND assay_run.plate_layout_name_id = plate_layout_name.id AND assay_run.id=assay_result.assay_run_id AND assay_result.plate_order = plate_plate_set.plate_order AND assay_result.well = well.by_col AND plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.plate_format_id = well_numbers.plate_format AND plate_layout.well_by_col=well.by_col AND plate_set.id = plate_plate_set.plate_set_id AND plate_plate_set.plate_id = plate.id AND plate.id = well.plate_id AND well.by_col = well_numbers.by_col AND well_sample.well_id =  well.id AND well.by_col=well_numbers.by_col AND plate_layout_name.id= plate_layout.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result.assay_run_id = "  arid " AND assay_result." column " > "  threshold  " ORDER BY assay_result." column))
./app/controllers/hitlist.scm:522:	   (int-array (string-replace-substring int-array "+" "\", \""))
./app/controllers/hitlist.scm:523:	   (sql (string-append "SELECT new_hit_list('" hlname "', '" descr "', " num-hits ", " arid ", '" sid "', '{\"" int-array"\"}')" ))
./app/controllers/hitlist.scm:525:	   (dest (string-append "/assayrun/getarid?arid=" arid))
./app/controllers/hitlist.scm:541:	 (set! results  (string-append results "\"" (number->string (cdar lst)) "\"" ))
./app/controllers/hitlist.scm:542:       (string-append "'{" results  "}'"))
./app/controllers/hitlist.scm:544:	 (set! results  (string-append results "\"" (number->string (cdar lst)) "\","  ))
./app/controllers/hitlist.scm:553:	 (sql (string-append "SELECT  plate_plate_set.plate_id, well.by_col, assay_result." column ", plate_layout.well_type_id, well_sample.sample_id FROM assay_result, assay_run, plate_layout_name, plate_layout, plate_set, plate, plate_plate_set, well_numbers, well, well_sample WHERE assay_run.plate_set_id = plate_set.id AND assay_run.plate_layout_name_id = plate_layout_name.id AND assay_run.id=assay_result.assay_run_id AND assay_result.plate_order = plate_plate_set.plate_order AND assay_result.well = well.by_col AND plate_set.plate_layout_name_id = plate_layout_name.id AND plate_set.plate_format_id = well_numbers.plate_format AND plate_layout.well_by_col=well.by_col AND plate_set.id = plate_plate_set.plate_set_id AND plate_plate_set.plate_id = plate.id AND plate.id = well.plate_id AND well.by_col = well_numbers.by_col AND well_sample.well_id =  well.id AND well.by_col=well_numbers.by_col AND plate_layout_name.id= plate_layout.plate_layout_name_id AND plate_layout.well_type_id=1 AND assay_result.assay_run_id = " (number->string arid) " AND assay_result." column " > " (number->string threshold)  " ORDER BY assay_result." column))
./app/controllers/urbit.scm:36:	;;   (dummy  (DEBUG  (string-append "Value of name (in urbit): " name "~%")))				
./app/controllers/urbit.scm:52:		 (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/urbit.scm:91:;; 					   (dummy  (DEBUG  (string-append "Value of name: " name "~%")))				
./app/controllers/urbit.scm:94:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./app/controllers/urbit.scm:131:;; 					   (sql2 (string-append "INSERT INTO sess_person ( sid, person_id, prjid) VALUES ('" sid "', " userid ", 1)"))
./pub/JSZip-2.5.0/jszip.js:2006:    // This code is inspired by http://jsperf.com/arraybuffer-to-string-apply-performance/2
./pub/DataTables-1.10.23/js/jquery.dataTables.min.js:84:n.col)}if("ssp"!=P(a)&&0!==h.length){l=0;for(b=g.length;l<b;l++)c[g[l]]=l;f===h.length?g.sort(function(m,p){var t,v=h.length,x=e[m]._aSortData,r=e[p]._aSortData;for(t=0;t<v;t++){var A=h[t];var E=x[A.col];var H=r[A.col];E=E<H?-1:E>H?1:0;if(0!==E)return"asc"===A.dir?E:-E}E=c[m];H=c[p];return E<H?-1:E>H?1:0}):g.sort(function(m,p){var t,v=h.length,x=e[m]._aSortData,r=e[p]._aSortData;for(t=0;t<v;t++){var A=h[t];var E=x[A.col];var H=r[A.col];A=d[A.type+"-"+A.dir]||d["string-"+A.dir];E=A(E,H);if(0!==E)return E}E=
./pub/DataTables-1.10.23/js/jquery.dataTables.min.js:177:b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=ic(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};k.extend(L.type.order,{"date-pre":function(a){a=Date.parse(a);return isNaN(a)?-Infinity:a},"html-pre":function(a){return ca(a)?"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return ca(a)?"":"string"===typeof a?a.toLowerCase():a.toString?a.toString():""},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,b){return a<
./pub/DataTables-1.10.23/js/jquery.dataTables.js:6007:			 *    iTest = oSort['string-asc']('data11', 'data12');
./pub/DataTables-1.10.23/js/jquery.dataTables.js:6066:						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14372:			 *      "string-pre": function(x) {
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14381:			 *      "string-case-asc": function(x,y) {
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14384:			 *      "string-case-desc": function(x,y) {
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14882:		"string-pre": function ( a ) {
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14884:			// http://jsperf.com/tostring-v-check
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14894:		// string-asc and -desc are retained only for compatibility with the old
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14896:		"string-asc": function ( x, y ) {
./pub/DataTables-1.10.23/js/jquery.dataTables.js:14900:		"string-desc": function ( x, y ) {
